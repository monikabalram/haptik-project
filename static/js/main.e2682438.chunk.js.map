{"version":3,"sources":["components/customPaginationTable.js","components/dialogBox.js","pages/friendsList.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles1","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","className","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","max","useStyles2","table","minWidth","nameText","fontSize","fontWeight","subText","color","border","iconFilled","cursor","icon","CustomPaginationActionsTable","React","useState","rows","setRows","setPage","useEffect","console","log","emptyRows","min","length","TableContainer","component","Paper","Table","TableBody","searchText","slice","map","row","TableRow","TableCell","style","width","name","setRow","_id","align","favorite","deleteRow","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","ActionsComponent","DialogBox","open","setOpen","handleClose","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","FriendsList","state","openDialog","deleteRowId","friendsList","searchList","e","this","setState","target","value","filter","friend","toLowerCase","includes","sort","friendA","friendB","keyCode","friendObj","random","push","index","splice","TextField","placeholder","variant","onKeyDown","handleKeyDown","onChange","handleSearch","setFavorite","bind","deleteFriend","closeDialog","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2682438.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport StarOutlineIcon from '@material-ui/icons/StarOutline';\nimport StarIcon from '@material-ui/icons/Star';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport './table.css';\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles2 = makeStyles({\n  table: {\n    minWidth: 100,\n  },\n  nameText: {\n    fontSize: '20px',\n    fontWeight: '400'\n  },\n  subText: {\n    color: 'darkgray'\n  },\n  border: {\n    border: '1px solid darkgray'\n  },\n  iconFilled: {\n    fontSize: '30px',\n    color: 'orange',\n    cursor: 'pointer'\n  },\n  icon: {\n    fontSize: '30px',\n    cursor: 'pointer'\n  }\n});\n\nexport default function CustomPaginationActionsTable(props) {\n  const classes = useStyles2();\n  const [rows, setRows] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage] = React.useState(4);\n\n  React.useEffect(() => {\n      console.log(props.rows)\n      console.log(\"hook rows : \", rows)\n      setRows(props.rows)\n  },[props, props.rows, rows])\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"custom pagination table\">\n        <TableBody>\n          {(rowsPerPage > 0 && props.searchText === \"\"\n            ? rows.slice(page * rowsPerPage, (page * rowsPerPage) + rowsPerPage)\n            : rows\n          ).map((row) => (\n            <TableRow key={row.name}>\n              <TableCell style={{ width: 200 }}>\n                <div className={classes.nameText}>{row.name}</div>\n                <div className={classes.subText}>{\"is your friend\"}</div>\n              </TableCell>\n              <TableCell onClick={() => props.setRow(row._id)} style={{ width: 30 }} align=\"right\">\n                {row.favorite ? <StarIcon className={classes.iconFilled}/> : <StarOutlineIcon className={classes.icon}/>}\n              </TableCell>\n              <TableCell onClick={() => props.deleteRow(row._id)} style={{ width: 30 }} align=\"right\">\n                <DeleteOutlineIcon className={classes.icon}/>\n              </TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        {rows.length > 4 && props.searchText === \"\" && <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[]}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={4}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>}\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function DialogBox(props) {\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n      if(props.open) {\n        setOpen(true)\n      }\n  },[props, props.open])\n\n  const handleClose = () => {\n    props.handleClose()\n    setOpen(false);\n  };\n\n  const handleOk = () => {\n    props.handleClose('ok')\n    setOpen(false);\n  }\n\n  return (\n    <div>\n      <Dialog\n        fullWidth\n        maxWidth={\"sm\"}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"Confirmation\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n              Are you sure you want to delete ?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} color=\"primary\" autoFocus>\n            Delete\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { Component } from 'react';\n\nimport CustomTable from '../components/customPaginationTable';\nimport DialogBox from '../components/dialogBox';\n\nimport TextField from '@material-ui/core/TextField';\n\nimport './friends.css'\n\nclass FriendsList extends Component {\n    constructor(){\n        super();\n        this.state={\n            openDialog : false,\n            searchText : \"\",\n            deleteRowId : \"\",\n            friendsList : [],\n            searchList : []\n        }\n    }\n\n    handleSearch(e) {\n        let {friendsList, searchList} = this.state;\n        this.setState({searchText : e.target.value})\n        if(e.target.value) {\n            searchList = friendsList.filter(friend => friend.name.toLowerCase().includes(e.target.value.toLowerCase())).sort((friendA,friendB) => friendB.favorite - friendA.favorite);\n            this.setState({searchList})\n        } else {\n            this.setState({searchList : friendsList})\n        }\n    }\n\n    handleKeyDown(e) {\n        let {friendsList, searchText} = this.state\n        if(e.keyCode === 13) { // keyCode for enter\n            var list = friendsList.filter(friend => friend.name.toLowerCase() === searchText.toLowerCase())\n            if(list.length === 0 && searchText && searchText !== ' ') {\n                var friendObj = {\n                    _id : Math.random(),\n                    name : searchText,\n                    favorite : false\n                }\n                friendsList.push(friendObj);\n                this.setState({friendsList})\n            } else {\n                // alert('name already exists');\n            }\n            this.setState({searchText : \"\", searchList : friendsList})\n        }\n    }\n\n    setFavorite(_id) {\n        let {friendsList} = this.state;\n         friendsList.map((friend) => {\n                if (friend._id === _id)\n                 friend.favorite = !friend.favorite;\n                 return friend;\n            })\n        friendsList = friendsList.sort((friendA,friendB) => friendB.favorite - friendA.favorite)\n        this.setState({friendsList, searchList : friendsList})\n    }\n\n    closeDialog(value) {\n        let {friendsList, deleteRowId} = this.state; \n        if(value === 'ok') {\n            friendsList.map((friend, index) => {\n                if (friend._id === deleteRowId) {\n                 friendsList.splice(index,1)\n                }\n                 return friend;\n            })\n        this.setState({friendsList, searchList : friendsList})\n        }\n        this.setState({openDialog: false, deleteRowId : \"\"})\n    }\n\n    deleteFriend(_id) {\n       this.setState({deleteRowId : _id, openDialog: true})\n    }\n\n    render() {\n        const {searchList, searchText, friendsList, openDialog} = this.state;\n        return (\n            <div className=\"page-centre\">\n                <div className=\"\" style={{color:'black', width:'500px'}}>\n                    <div className=\"title p-10\">Friend's List</div>\n\n                    {/* search box */}\n                    <TextField placeholder=\"Enter your friend's name\" fullWidth variant=\"outlined\" value={searchText} onKeyDown={(e) => this.handleKeyDown(e)} onChange={(e) => this.handleSearch(e)} />\n\n                    {/* pagination table */}\n                    {friendsList.length > 0 ? <CustomTable rows={searchList} searchText={searchText} setRow={this.setFavorite.bind(this)} deleteRow={this.deleteFriend.bind(this)}/>\n                    : <div>Add friends in your contact list</div>}\n\n                    {/* delete confirmation box */}\n                    {openDialog && <DialogBox open={openDialog} handleClose={this.closeDialog.bind(this)}/>}\n                </div>\n            </div>\n        )\n    }\n}\nexport default FriendsList;","import FriendsList from './pages/friendsList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FriendsList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}